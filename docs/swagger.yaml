basePath: /api/v1
definitions:
  handlers.adminRegisterRequest:
    properties:
      email:
        example: admin@example.com
        type: string
      password:
        example: admin123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  handlers.balanceResponse:
    properties:
      amount:
        example: 1000.5
        type: number
      currency:
        example: EUR
        type: string
    type: object
  handlers.balancesResponse:
    properties:
      balances:
        items:
          $ref: '#/definitions/handlers.balanceResponse'
        type: array
    type: object
  handlers.depositWithdrawRequest:
    properties:
      amount:
        example: 100.5
        type: number
      currency:
        example: EUR
        type: string
      description:
        example: Initial deposit
        type: string
    required:
    - amount
    - currency
    type: object
  handlers.loginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  handlers.loginResponse:
    properties:
      role:
        example: user
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  handlers.transferRequest:
    properties:
      amount:
        example: 50.25
        type: number
      currency:
        example: EUR
        type: string
      description:
        example: Payment for services
        type: string
      recipient_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    required:
    - amount
    - currency
    - recipient_id
    type: object
  handlers.userRegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      created_at:
        type: string
      currency:
        type: string
      description:
        type: string
      id:
        type: string
      recipient:
        $ref: '#/definitions/models.User'
      recipient_id:
        type: string
      status:
        type: string
      type:
        $ref: '#/definitions/models.TransactionType'
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: Relationships
      user_id:
        type: string
    type: object
  models.TransactionType:
    enum:
    - deposit
    - withdraw
    - transfer
    type: string
    x-enum-varnames:
    - TransactionTypeDeposit
    - TransactionTypeWithdraw
    - TransactionTypeTransfer
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      role:
        description: user or admin
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A banking service API in Go using Gin framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Banking API
  version: "1.0"
paths:
  /admin/transactions:
    get:
      consumes:
      - application/json
      description: Returns a list of all transactions (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all transactions
      tags:
      - admin
  /admin/transactions/{id}:
    get:
      consumes:
      - application/json
      description: Returns a specific transaction by ID (admin only)
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get transaction
      tags:
      - admin
  /admin/users:
    get:
      consumes:
      - application/json
      description: Returns a list of all users (admin only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all users
      tags:
      - admin
  /admin/users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific user by ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - admin
    get:
      consumes:
      - application/json
      description: Returns a specific user by ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: Updates a specific user by ID (admin only)
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - admin
  /admin/users/{user_id}/balance:
    get:
      consumes:
      - application/json
      description: Retrieves a user's balance for a specific currency at a given point
        in time
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: 'Currency code (default: EUR)'
        in: query
        name: currency
        type: string
      - description: Timestamp in RFC3339 format
        in: query
        name: at_time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user balance at specific time
      tags:
      - admin
  /auth/admin/login:
    post:
      consumes:
      - application/json
      description: Authenticates an admin user and returns a JWT token
      parameters:
      - description: Admin login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.loginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login as admin
      tags:
      - auth
  /auth/admin/register:
    post:
      consumes:
      - application/json
      description: Creates a new admin account (requires admin token)
      parameters:
      - description: Admin registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.adminRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Register new admin
      tags:
      - auth
  /auth/user/login:
    post:
      consumes:
      - application/json
      description: Authenticates a regular user and returns a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.loginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login as user
      tags:
      - auth
  /auth/user/register:
    post:
      consumes:
      - application/json
      description: Creates a new regular user account
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.userRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - auth
  /transactions/deposit:
    post:
      consumes:
      - application/json
      description: Deposits money into the user's account
      parameters:
      - description: Deposit details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.depositWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Make a deposit
      tags:
      - transactions
  /transactions/me:
    get:
      consumes:
      - application/json
      description: Returns a list of transactions for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List user's transactions
      tags:
      - transactions
  /transactions/me/{id}:
    get:
      consumes:
      - application/json
      description: Returns a specific transaction for the authenticated user
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Transaction'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user's transaction
      tags:
      - transactions
  /transactions/transfer:
    post:
      consumes:
      - application/json
      description: Transfers money to another user
      parameters:
      - description: Transfer details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.transferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Transfer money
      tags:
      - transactions
  /transactions/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraws money from the user's account
      parameters:
      - description: Withdrawal details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.depositWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Make a withdrawal
      tags:
      - transactions
  /users/balance:
    get:
      consumes:
      - application/json
      description: Retrieves all balances for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.balancesResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user balances
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      description: Returns the profile of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates the profile of the currently authenticated user
      parameters:
      - description: User update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update current user profile
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
